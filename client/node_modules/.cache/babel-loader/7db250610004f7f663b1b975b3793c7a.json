{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react'; //ui packages\n\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; // pakages\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GoogleLogin from 'react-google-login'; //style\n\nimport useStyles from './Styles'; // components\n\nimport InputField from './InputField';\nimport Icon from './icon';\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const classes = useStyles();\n\n  const handlePasswordShow = () => setShowPassword(prvShowPassword => !prvShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleOnChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(prvIssignUp => !prvIssignUp);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    console.log(res);\n    toast.success(res, {\n      position: \"bottom-right\"\n    });\n  };\n\n  const googleFaliure = error => {\n    console.log(error);\n    toast.error(error, 'Sign In', {\n      position: \"bottom-right\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, isSignUp ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, isSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputField, {\n    name: \"firstName\",\n    label: \"firstName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"firstName\",\n    label: \"firstName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleOnChange: handleOnChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    handleOnChange: handleOnChange,\n    type: showPassword ? 'text' : 'password',\n    handlePasswordShow: handlePasswordShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }), isSignUp && /*#__PURE__*/React.createElement(InputField, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleOnChange: handleOnChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, isSignUp ? 'Sign Up' : 'sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"This is my custom Google button\"),\n    buttonText: \"Login\",\n    onSuccess: googleSuccess,\n    onFailure: googleFaliure,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), \",\", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\")))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    draggable: true,\n    pauseOnHover: true,\n    theme: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Container","Avatar","Paper","Grid","Typography","Button","LockOutlinedIcon","ToastContainer","toast","GoogleLogin","useStyles","InputField","Icon","Auth","showPassword","setShowPassword","isSignUp","setIsSignUp","classes","handlePasswordShow","prvShowPassword","handleSubmit","handleOnChange","switchMode","prvIssignUp","googleSuccess","res","console","log","success","position","googleFaliure","error","paper","avatar","form","submit","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//ui packages\r\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// pakages\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n//style\r\nimport useStyles from './Styles';\r\n\r\n// components\r\nimport InputField from './InputField';\r\nimport Icon from './icon';\r\n\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handlePasswordShow = () => setShowPassword((prvShowPassword) => !prvShowPassword);\r\n\r\n    const handleSubmit = () => {\r\n\r\n    };\r\n\r\n    const handleOnChange = () => {\r\n\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsSignUp((prvIssignUp) => !prvIssignUp);\r\n        setShowPassword(false);\r\n    };\r\n\r\n    const googleSuccess = async (res) => {\r\n        console.log(res);\r\n        toast.success(res, {\r\n            position: \"bottom-right\"\r\n        });\r\n    };\r\n\r\n    const googleFaliure = (error) => {\r\n        console.log(error);\r\n        toast.error(error, 'Sign In', {\r\n            position: \"bottom-right\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography variant='h5'>{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {\r\n                                isSignUp && (\r\n                                    <>\r\n                                        <InputField\r\n                                            name=\"firstName\"\r\n                                            label='firstName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                        <InputField\r\n                                            name=\"firstName\"\r\n                                            label='firstName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            <InputField\r\n                                name='email'\r\n                                label='Email Address'\r\n                                handleOnChange={handleOnChange}\r\n                                type=\"email\"\r\n                            />\r\n                            <InputField\r\n                                name='password'\r\n                                label='Password'\r\n                                handleOnChange={handleOnChange}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                handlePasswordShow={handlePasswordShow}\r\n                            />\r\n                            {\r\n                                isSignUp && <InputField name='confirmPassword' label=\"Repeat Password\" handleOnChange={handleOnChange} type='password' />\r\n                            }\r\n                        </Grid>\r\n                        <Button fullWidth type='submit' variant='contained' color='primary' className={classes.submit}>{isSignUp ? 'Sign Up' : 'sign In'}</Button>\r\n                        {/* <GoogleLogin\r\n                            clientId=\"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\"\r\n                            render={(renderPrpos) => (\r\n                                <Button\r\n                                    className={classes.googleButton}\r\n                                    color='primary'\r\n                                    fullWidth\r\n                                    onClick={renderPrpos.onClick}\r\n                                    disabled={renderPrpos.disabled}\r\n                                    startIcon={<Icon />}\r\n                                    variant='contained'\r\n                                >\r\n                                    Google Sign In\r\n                                </Button>\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleFaliure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        /> */}\r\n                        <GoogleLogin\r\n                            clientId=\"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</button>\r\n                            )}\r\n                            buttonText=\"Login\"\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleFaliure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />,\r\n                        <Grid container justify='flex-end'>\r\n                            <Grid item>\r\n                                <Button onClick={switchMode}>\r\n                                    {isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}