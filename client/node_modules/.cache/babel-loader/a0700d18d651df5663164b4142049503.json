{"ast":null,"code":"// action component\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST_DETAIL, USER_PROFILE, POST_COMMENT, USER_PROFILE_POST, USER_FOLLOW, SERACH_USER, USER_UNFOLLOW } from '../constants/actionTypes'; // packages\n\nimport { toast } from 'react-toastify'; // api \n\nimport * as api from '../api/Index.js';\n/**\n * get the all user post \n * @param {number} page \n * @returns node\n */\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * get single post detail\n * @param {string} id \n * @returns node\n */\n\nexport const getPostDetail = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPostDetail(id);\n    dispatch({\n      type: FETCH_POST_DETAIL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * search posts\n * @param {object} searchQuery \n * @returns node \n */\n\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * create post \n * @param {object} post \n */\n\nexport const createPost = (formData, navigate) => async dispatch => {\n  // console.log(Object.entries(formData))\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(formData);\n    navigate(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n *  update post \n * @param {string} id \n * @param {object} post \n */\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * user like post \n * @param {string} id \n */\n\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * Delete post \n * @param {string} id \n */\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n *  comment post action\n * @param {string} value \n * @param {string} id \n * @returns node\n */\n\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: POST_COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n *get user profile \n * @param {string} id \n * @returns \n */\n\nexport const userProfile = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchUserProfile(id);\n    dispatch({\n      type: USER_PROFILE,\n      payload: data.user\n    });\n    dispatch({\n      type: USER_PROFILE_POST,\n      payload: data.post\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * search user profile\n * @param {string} searchUserProfile \n * @returns \n */\n\nexport const searchUsers = searchUserProfile => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.searchUser(searchUserProfile);\n    dispatch({\n      type: SERACH_USER,\n      payload: data.user\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * follow user by user id\n * @param {string} userId \n */\n\nexport const follow = (followId, user, setFollowing) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.followUser(followId, user);\n    setFollowing(data.users.following);\n    dispatch({\n      type: USER_FOLLOW,\n      data\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n/**\n * unfollow user by user id\n * @param {string} unFollowId \n * @param {object} user \n */\n\nexport const unFollow = (unFollowId, user, setFollowing) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.unFollowUser(unFollowId, user);\n    setFollowing(data.userLogged.following);\n    dispatch({\n      type: USER_UNFOLLOW,\n      data\n    });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/actions/Posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST_DETAIL","USER_PROFILE","POST_COMMENT","USER_PROFILE_POST","USER_FOLLOW","SERACH_USER","USER_UNFOLLOW","toast","api","getPosts","page","dispatch","type","data","fetchPosts","payload","err","error","response","message","position","getPostDetail","id","fetchPostDetail","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","formData","navigate","_id","updatePost","post","likePost","deletePost","commentPost","value","comment","comments","userProfile","fetchUserProfile","user","searchUsers","searchUserProfile","searchUser","follow","followId","setFollowing","followUser","users","following","unFollow","unFollowId","unFollowUser","userLogged"],"mappings":"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","sourcesContent":["// action component\nimport {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  FETCH_POST_DETAIL,\n  USER_PROFILE,\n  POST_COMMENT,\n  USER_PROFILE_POST,\n  USER_FOLLOW,\n  SERACH_USER,\n  USER_UNFOLLOW,\n} from '../constants/actionTypes';\n\n// packages\nimport { toast } from 'react-toastify';\n\n// api \nimport * as api from '../api/Index.js';\n\n/**\n * get the all user post \n * @param {number} page \n * @returns node\n */\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * get single post detail\n * @param {string} id \n * @returns node\n */\nexport const getPostDetail = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPostDetail(id);\n    dispatch({ type: FETCH_POST_DETAIL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n\n/**\n * search posts\n * @param {object} searchQuery \n * @returns node \n */\nexport const getPostBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n\n/**\n * create post \n * @param {object} post \n */\nexport const createPost = (formData, navigate) => async (dispatch) => {\n  // console.log(Object.entries(formData))\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(formData);\n    navigate(`/posts/${data._id}`)\n    dispatch({ type: CREATE, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n *  update post \n * @param {string} id \n * @param {object} post \n */\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * user like post \n * @param {string} id \n */\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * Delete post \n * @param {string} id \n */\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n *  comment post action\n * @param {string} value \n * @param {string} id \n * @returns node\n */\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n    dispatch({ type: POST_COMMENT, payload: data });\n    return data.comments;\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n}\n\n/**\n *get user profile \n * @param {string} id \n * @returns \n */\nexport const userProfile = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchUserProfile(id);\n    dispatch({ type: USER_PROFILE, payload: data.user });\n    dispatch({ type: USER_PROFILE_POST, payload: data.post });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * search user profile\n * @param {string} searchUserProfile \n * @returns \n */\nexport const searchUsers = (searchUserProfile) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.searchUser(searchUserProfile);\n    dispatch({ type: SERACH_USER, payload: data.user });\n    dispatch({ type: END_LOADING });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * follow user by user id\n * @param {string} userId \n */\nexport const follow = (followId, user, setFollowing) => async (dispatch) => {\n  try {\n    const { data } = await api.followUser(followId, user);\n    setFollowing(data.users.following)\n    dispatch({ type: USER_FOLLOW, data });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n/**\n * unfollow user by user id\n * @param {string} unFollowId \n * @param {object} user \n */\nexport const unFollow = (unFollowId, user, setFollowing) => async (dispatch) => {\n  try {\n    const { data } = await api.unFollowUser(unFollowId, user);\n    setFollowing(data.userLogged.following)\n    dispatch({ type: USER_UNFOLLOW, data });\n  } catch (err) {\n    toast.error(err.response.data.message, {\n      position: \"bottom-right\"\n    });\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}