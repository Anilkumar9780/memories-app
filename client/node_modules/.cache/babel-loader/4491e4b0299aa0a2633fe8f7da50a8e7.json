{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\PostsDetail\\\\PostDetail.js\";\nimport React, { useEffect } from 'react'; //styles\n\nimport useStyles from './Styles'; // packges\n\nimport { Typography, Divider, Paper, CircularProgress, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate, Link } from 'react-router-dom'; //component\n\nimport CommentSection from './CommentSection';\nimport { getPostDetail } from '../../actions/Posts';\nimport { getPostBySearch } from './../../actions/Posts';\n\nconst PostsDetails = () => {\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  const url = \"http://localhost:5000/\";\n  /**\r\n   *  dispatch post details\r\n   */\n\n  useEffect(() => {\n    dispatch(getPostDetail(id));\n  }, [id]); // dispatch search post \n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostBySearch({\n        search: 'none',\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(',')\n      }));\n    }\n  }, [post]); // post null then return null\n\n  if (!post) return null; // loading \n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.loadingPaper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"7em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  ; // recommended posts \n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id); // on click recommended post push reommended post detail\n\n  const openPost = id => navigate(`/posts/${id}`);\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: '20px',\n      borderRadius: '15px'\n    },\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, post.tags.map(tag => `#${tag} `)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, post.message), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/user-profile/${post.postedBy}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Created by: \", post.name)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 49\n    }\n  }, \"Realtime Chat - coming soon!\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CommentSection, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"300px\",\n    className: classes.media,\n    src: url + post.file || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }))), !!recommendedPosts.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \" You might also like : \"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommendedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, recommendedPosts.map(({\n    title,\n    _id,\n    name,\n    likes,\n    message,\n    file\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      cursor: \"pointer\",\n      borderRadius: '15px'\n    },\n    onClick: () => openPost(_id),\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, \" \", title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, \" \", name), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, \" \", message), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, \"Likes: \", likes === null || likes === void 0 ? void 0 : likes.length), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"200px\",\n    src: url + file,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }))))));\n};\n\nexport default PostsDetails;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/PostsDetail/PostDetail.js"],"names":["React","useEffect","useStyles","Typography","Divider","Paper","CircularProgress","Button","moment","useSelector","useDispatch","useParams","useNavigate","Link","CommentSection","getPostDetail","getPostBySearch","PostsDetails","post","posts","isLoading","state","navigate","dispatch","id","classes","url","search","tags","join","loadingPaper","recommendedPosts","filter","_id","openPost","padding","borderRadius","card","section","title","map","tag","message","postedBy","textDecoration","name","createdAt","fromNow","margin","imageSection","media","file","length","likes","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n//styles\r\nimport useStyles from './Styles';\r\n\r\n// packges\r\nimport { Typography, Divider, Paper, CircularProgress, Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\n\r\n\r\n//component\r\nimport CommentSection from './CommentSection';\r\nimport { getPostDetail } from '../../actions/Posts';\r\nimport { getPostBySearch } from './../../actions/Posts';\r\n\r\nconst PostsDetails = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const url = \"http://localhost:5000/\";\r\n\r\n    /**\r\n     *  dispatch post details\r\n     */\r\n    useEffect(() => {\r\n        dispatch(getPostDetail(id));\r\n    }, [id]);\r\n\r\n    // dispatch search post \r\n    useEffect(() => {\r\n        if (post) {\r\n            dispatch(getPostBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n        }\r\n    }, [post]);\r\n\r\n    // post null then return null\r\n    if (!post) return null;\r\n\r\n    // loading \r\n    if (isLoading) {\r\n        return <Paper className={classes.loadingPaper} elevation={6}>\r\n            <CircularProgress size=\"7em\" />\r\n        </Paper>\r\n    };\r\n\r\n    // recommended posts \r\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n    // on click recommended post push reommended post detail\r\n    const openPost = (id) => navigate(`/posts/${id}`);\r\n\r\n    return (\r\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n            {/* post detail page */}\r\n            <div className={classes.card}>\r\n                <div className={classes.section}>\r\n                    <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n                    <Link to={`/posts/user-profile/${post.postedBy}`} style={{ textDecoration: 'none', }} >\r\n                        <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n                    </Link>\r\n                    <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                    <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                    <CommentSection post={post} />\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                    <img width='300px' className={classes.media} src={url + post.file || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n                </div>\r\n            </div>\r\n            {/* recommmended posts */}\r\n            {\r\n                !!recommendedPosts.length && (\r\n                    <div className={classes.section}>\r\n                        <Typography gutterBottom variant='h5'> You might also like : </Typography>\r\n                        <Divider />\r\n                        <div className={classes.recommendedPosts}>\r\n                            {recommendedPosts.map(({ title, _id, name, likes, message, file }) =>\r\n                                <div style={{ margin: \"20px\", cursor: \"pointer\", borderRadius: '15px' }} onClick={() => openPost(_id)} key={_id}>\r\n                                    <Typography gutterBottom variant='h6'> {title}</Typography>\r\n                                    <Typography gutterBottom variant='subtitle2'> {name}</Typography>\r\n                                    <Typography gutterBottom variant='subtitle2'> {message}</Typography>\r\n                                    <Typography gutterBottom variant='subtitle1'>Likes: {likes?.length}</Typography>\r\n                                    <img width='200px' src={url + file} alt={title} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Paper >\r\n    );\r\n}\r\n\r\nexport default PostsDetails;\r\n"]},"metadata":{},"sourceType":"module"}