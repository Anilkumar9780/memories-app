{"ast":null,"code":"// component actiontype\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    // fetch all data\n    case FETCH_ALL:\n      return action.payload;\n    //like uers by id\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    // create post\n\n    case CREATE:\n      return [...posts, action.payload];\n    // update post \n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    // delete post\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/reducers/Posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;AAEF;;AACA,SAAKJ,IAAL;AACE,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;AAEF;;AACA,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AAEF;;AACA,SAAKN,MAAL;AACE,aAAOG,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;AAEF;;AACA,SAAKP,MAAL;AACE,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOH,KAAP;AArBJ;AAuBD,CAxBD","sourcesContent":["// component actiontype\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    // fetch all data\n    case FETCH_ALL:\n      return action.payload;\n\n    //like uers by id\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n\n    // create post\n    case CREATE:\n      return [...posts, action.payload];\n\n    // update post \n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n\n    // delete post\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}