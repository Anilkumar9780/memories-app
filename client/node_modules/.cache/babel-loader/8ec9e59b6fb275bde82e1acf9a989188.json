{"ast":null,"code":"// component actiontype\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST_DETAIL } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n    // fetch all data\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    //search posts get\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n    // get single post detail\n\n    case FETCH_POST_DETAIL:\n      return { ...state,\n        posts: action.payload\n      };\n    //like uers by id\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    // create post\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n    // update post \n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    // delete post\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/reducers/Posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST_DETAIL","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"mappings":"AAAA;AACA,SACEA,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,eANF,EAOEC,aAPF,EAQEC,WARF,EASEC,iBATF,QAUO,0BAVP;AAYA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF,SAAKH,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;AAEF;;AACA,SAAKV,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;AAOF;;AACA,SAAKZ,eAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;AAEF;;AACA,SAAKN,iBAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;AAEF;;AACA,SAAKV,IAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYO,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;AAEF;;AACA,SAAKlB,MAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAnB,OAAP;AAEF;;AACA,SAAKZ,MAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYO,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;AAEF;;AACA,SAAKhB,MAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAOL,KAAP;AAxCJ;AA0CD,CA3CD","sourcesContent":["// component actiontype\nimport {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  FETCH_POST_DETAIL\n} from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n\n    case END_LOADING:\n      return { ...state, isLoading: false };\n\n    // fetch all data\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    //search posts get\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload };\n\n    // get single post detail\n    case FETCH_POST_DETAIL:\n      return { ...state, posts: action.payload };\n\n    //like uers by id\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n\n    // create post\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n\n    // update post \n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n\n    // delete post\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}