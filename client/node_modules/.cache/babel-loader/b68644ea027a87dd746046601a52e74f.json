{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Auth\\\\NewPassword.js\";\nimport React, { useState } from 'react'; //style\n\nimport useStyles from './Styles'; //material ui package\n\nimport { Container, Avatar, Paper, Grid, Typography, Button, TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; // packages\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { newPasswordGen } from '../../actions/Auth';\n\nconst NewPassword = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const {\n    resetPassword\n  } = useSelector(state => state.posts);\n  const token = resetPassword === null || resetPassword === void 0 ? void 0 : resetPassword.resetPasswordToken;\n\n  const hnadleGenNewPassword = () => {\n    dispatch(newPasswordGen(password, token));\n    navigate('/auth');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: hnadleGenNewPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    label: \"New Password\",\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    type: \"password\",\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"reset Password\"))));\n};\n\nexport default NewPassword;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Auth/NewPassword.js"],"names":["React","useState","useStyles","Container","Avatar","Paper","Grid","Typography","Button","TextField","LockOutlinedIcon","useDispatch","useSelector","useNavigate","newPasswordGen","NewPassword","classes","dispatch","navigate","password","setPassword","resetPassword","state","posts","token","resetPasswordToken","hnadleGenNewPassword","paper","avatar","form","event","target","value","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//style\r\nimport useStyles from './Styles';\r\n\r\n//material ui package\r\nimport { Container, Avatar, Paper, Grid, Typography, Button, TextField } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// packages\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { newPasswordGen } from '../../actions/Auth';\r\n\r\nconst NewPassword = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [password, setPassword] = useState('');\r\n    const { resetPassword } = useSelector((state) => state.posts);\r\n    const token = resetPassword?.resetPasswordToken;\r\n\r\n    const hnadleGenNewPassword = () => {\r\n        dispatch(newPasswordGen(password, token));\r\n        navigate('/auth')\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant='h5'>New Password</Typography>\r\n                <form className={classes.form} onSubmit={hnadleGenNewPassword}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={12} >\r\n                            <TextField\r\n                                name='password'\r\n                                label='New Password'\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                                value={password}\r\n                                type=\"password\"\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button fullWidth type='submit' variant='contained' color='primary' className={classes.submit}>reset Password</Button>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NewPassword;\r\n"]},"metadata":{},"sourceType":"module"}