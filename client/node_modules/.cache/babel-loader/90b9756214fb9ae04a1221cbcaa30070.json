{"ast":null,"code":"// action type component\nimport { AUTH, RESET_PASSWORD } from '../constants/actionTypes'; // packages\n\nimport { toast } from 'react-toastify'; // api \n\nimport * as api from '../api/Index.js';\n/**\r\n *  user signin \r\n * @param {object} formData \r\n * @param {} navigate  \r\n */\n\nexport const signin = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    console.log(data.message);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    navigate('/');\n    toast.success(data.message, {\n      position: \"bottom-right\"\n    });\n  } catch ({\n    // Destructuring\n    err: {\n      response: {\n        data: {\n          message = \"\"\n        }\n      }\n    }\n  }) {\n    console.log(message);\n    console.log(err.response.data.message);\n  }\n};\n/**\r\n * user signup \r\n * @param {object} formData \r\n * @param {*} navigate \r\n */\n\nexport const signup = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    navigate('/');\n    toast.success(data.message, {\n      position: \"bottom-right\",\n      type: \"success\"\n    });\n  } catch ({\n    // Destructuring\n    data: {\n      error: {\n        message = \"\"\n      }\n    }\n  }) {\n    toast.error(message, {\n      position: \"bottom-right\",\n      type: \"error\"\n    });\n  }\n};\nexport const resetPassword = email => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.resetPasswordApi(email);\n    dispatch({\n      type: RESET_PASSWORD,\n      payload: data\n    });\n    toast.success(data.message, {\n      position: \"bottom-right\",\n      type: \"success\"\n    });\n  } catch ({\n    // Destructuring\n    data: {\n      error: {\n        message = \"\"\n      }\n    }\n  }) {\n    toast.error(message, {\n      position: \"bottom-right\",\n      type: \"error\"\n    });\n  }\n};\nexport const newPasswordGen = (password, token) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.newPasswordApi(password, token);\n    dispatch({\n      type: \"NEW_PASSWORD\",\n      data\n    });\n    toast.success(data.message, {\n      position: \"bottom-right\",\n      type: \"success\"\n    });\n  } catch ({\n    // Destructuring\n    data: {\n      error: {\n        message = \"\"\n      }\n    }\n  }) {\n    toast.error(message, {\n      position: \"bottom-right\",\n      type: \"error\"\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/actions/Auth.js"],"names":["AUTH","RESET_PASSWORD","toast","api","signin","formData","navigate","dispatch","data","signIn","console","log","message","type","success","position","err","response","signup","signUp","error","resetPassword","email","resetPasswordApi","payload","newPasswordGen","password","token","newPasswordApi"],"mappings":"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","sourcesContent":["// action type component\r\nimport { AUTH, RESET_PASSWORD } from '../constants/actionTypes';\r\n\r\n// packages\r\nimport { toast } from 'react-toastify';\r\n\r\n// api \r\nimport * as api from '../api/Index.js';\r\n\r\n/**\r\n *  user signin \r\n * @param {object} formData \r\n * @param {} navigate  \r\n */\r\nexport const signin = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signIn(formData);\r\n        console.log(data.message)\r\n        dispatch({ type: AUTH, data })\r\n        navigate('/');\r\n        toast.success(data.message, {\r\n            position: \"bottom-right\"\r\n        });\r\n    } catch ({\r\n        // Destructuring\r\n        err: { response: {\r\n            data: { message = \"\" },\r\n        } },\r\n    }) {\r\n        console.log(message)\r\n        console.log(err.response.data.message)\r\n    }\r\n};\r\n\r\n/**\r\n * user signup \r\n * @param {object} formData \r\n * @param {*} navigate \r\n */\r\nexport const signup = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signUp(formData);\r\n        dispatch({ type: AUTH, data });\r\n        navigate('/');\r\n        toast.success(data.message, {\r\n            position: \"bottom-right\",\r\n            type: \"success\",\r\n        });\r\n    } catch ({\r\n        // Destructuring\r\n        data: {\r\n            error: { message = \"\" },\r\n        },\r\n    }) {\r\n        toast.error(message, {\r\n            position: \"bottom-right\",\r\n            type: \"error\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.resetPasswordApi(email);\r\n        dispatch({ type: RESET_PASSWORD, payload: data });\r\n        toast.success(data.message, {\r\n            position: \"bottom-right\",\r\n            type: \"success\",\r\n        });\r\n    } catch ({\r\n        // Destructuring\r\n        data: {\r\n            error: { message = \"\" },\r\n        },\r\n    }) {\r\n        toast.error(message, {\r\n            position: \"bottom-right\",\r\n            type: \"error\",\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const newPasswordGen = (password, token) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.newPasswordApi(password, token);\r\n        dispatch({ type: \"NEW_PASSWORD\", data });\r\n        toast.success(data.message, {\r\n            position: \"bottom-right\",\r\n            type: \"success\",\r\n        });\r\n    } catch ({\r\n        // Destructuring\r\n        data: {\r\n            error: { message = \"\" },\r\n        },\r\n    }) {\r\n        toast.error(message, {\r\n            position: \"bottom-right\",\r\n            type: \"error\",\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}