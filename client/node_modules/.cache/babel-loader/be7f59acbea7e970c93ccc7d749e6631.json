{"ast":null,"code":"// action component\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST_DETAIL } from '../constants/actionTypes'; // api \n\nimport * as api from '../api/Index.js';\n/**\n *  get the all user post \n */\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n * get single post detail\n * @param {string} id \n * @returns node\n */\n\nexport const getPostDetail = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPostDetail(id);\n    dispatch({\n      type: FETCH_POST_DETAIL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n * search posts\n * @param {object} searchQuery \n * @returns node \n */\n\nexport const getPostBySearch = searchQuery => async dispatch => {\n  console.log(searchQuery);\n\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n * create post \n * @param {object} post \n */\n\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n *  update post \n * @param {string} id \n * @param {object} post \n */\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n * user like post \n * @param {string} id \n */\n\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/**\n * Delete post \n * @param {string} id \n */\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/actions/Posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST_DETAIL","api","getPosts","page","dispatch","type","data","fetchPosts","payload","error","console","log","message","getPostDetail","id","fetchPostDetail","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","likePost","deletePost"],"mappings":"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","sourcesContent":["// action component\nimport {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  FETCH_POST_DETAIL\n} from '../constants/actionTypes';\n\n// api \nimport * as api from '../api/Index.js';\n\n/**\n *  get the all user post \n */\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n/**\n * get single post detail\n * @param {string} id \n * @returns node\n */\nexport const getPostDetail = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPostDetail(id);\n    dispatch({ type: FETCH_POST_DETAIL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n/**\n * search posts\n * @param {object} searchQuery \n * @returns node \n */\nexport const getPostBySearch = (searchQuery) => async (dispatch) => {\n  console.log(searchQuery);\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data)\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n/**\n * create post \n * @param {object} post \n */\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING })\n    const { data } = await api.createPost(post);\n    dispatch({ type: CREATE, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n/**\n *  update post \n * @param {string} id \n * @param {object} post \n */\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n/**\n * user like post \n * @param {string} id \n */\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n/**\n * Delete post \n * @param {string} id \n */\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}