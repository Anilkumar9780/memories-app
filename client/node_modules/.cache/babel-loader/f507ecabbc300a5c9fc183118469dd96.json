{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react'; //ui packages\n\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; // pakages\n\nimport { ToastContainer, toast, cssTransition } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GoogleLogin from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; //style\n\nimport useStyles from './Styles'; // components\n\nimport InputField from './InputField';\nimport Icon from './icon'; // style css popup messages\n\nconst bounce = cssTransition({\n  enter: \"animate__animated animate__bounceIn\",\n  exit: \"animate__animated animate__bounceOut\"\n});\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // show password and hiden password\n\n  const handlePasswordShow = () => setShowPassword(prvShowPassword => !prvShowPassword);\n\n  const handleSubmit = () => {\n    toast.error('Sign In', {\n      position: \"bottom-right\",\n      transition: bounce\n    });\n  };\n\n  const handleOnChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(prvIssignUp => !prvIssignUp);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n      navigate(\"/\");\n    } catch (error) {\n      toast.error(error, {\n        position: \"bottom-right\",\n        transition: bounce\n      });\n    }\n  };\n\n  const googleFaliure = error => {\n    console.log(error);\n    toast.error(error, {\n      position: \"bottom-right\",\n      transition: bounce\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, isSignUp ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, isSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputField, {\n    name: \"firstName\",\n    label: \"firstName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"lastName\",\n    label: \"lastName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleOnChange: handleOnChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    handleOnChange: handleOnChange,\n    type: showPassword ? 'text' : 'password',\n    handlePasswordShow: handlePasswordShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), isSignUp && /*#__PURE__*/React.createElement(InputField, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleOnChange: handleOnChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, isSignUp ? 'Sign Up' : 'sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\",\n    render: renderPrpos => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderPrpos.onClick,\n      disabled: renderPrpos.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 48\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFaliure,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\")))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    draggable: true,\n    pauseOnHover: true,\n    theme: \"colored\",\n    transition: bounce,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Container","Avatar","Paper","Grid","Typography","Button","LockOutlinedIcon","ToastContainer","toast","cssTransition","GoogleLogin","gapi","useDispatch","useNavigate","useStyles","InputField","Icon","bounce","enter","exit","Auth","showPassword","setShowPassword","isSignUp","setIsSignUp","classes","dispatch","navigate","handlePasswordShow","prvShowPassword","handleSubmit","error","position","transition","handleOnChange","switchMode","prvIssignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","googleFaliure","console","log","paper","avatar","form","submit","renderPrpos","googleButton","onClick","disabled"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyCC,UAAzC,EAAqDC,MAArD,QAAmE,mBAAnE;AACA,OAAOC,gBAAP,MAA6B,iCAA7B,C,CAEA;;AACA,SAASC,cAAT,EAAyBC,KAAzB,EAAgCC,aAAhC,QAAqD,gBAArD;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAIA;;AACA,MAAMC,MAAM,GAAGR,aAAa,CAAC;AACzBS,EAAAA,KAAK,EAAE,qCADkB;AAEzBC,EAAAA,IAAI,EAAE;AAFmB,CAAD,CAA5B;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM0B,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B,CALe,CAOf;;AACA,QAAMe,kBAAkB,GAAG,MAAMN,eAAe,CAAEO,eAAD,IAAqB,CAACA,eAAvB,CAAhD;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvBtB,IAAAA,KAAK,CAACuB,KAAN,CAAY,SAAZ,EAAuB;AACnBC,MAAAA,QAAQ,EAAE,cADS;AAEnBC,MAAAA,UAAU,EAAEhB;AAFO,KAAvB;AAIH,GALD;;AAOA,QAAMiB,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBX,IAAAA,WAAW,CAAEY,WAAD,IAAiB,CAACA,WAAnB,CAAX;AACAd,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKA,QAAMe,aAAa,GAAG,MAAOC,GAAP,IAAe;AACjC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;;AAEA,QAAI;AACAhB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,IAAI,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA;AAAV;AAAtB,OAAD,CAAR;AACAd,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAHD,CAGE,OAAOI,KAAP,EAAc;AACZvB,MAAAA,KAAK,CAACuB,KAAN,CAAYA,KAAZ,EAAmB;AACfC,QAAAA,QAAQ,EAAE,cADK;AAEfC,QAAAA,UAAU,EAAEhB;AAFG,OAAnB;AAIH;AACJ,GAbD;;AAeA,QAAM4B,aAAa,GAAId,KAAD,IAAW;AAC7Be,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACAvB,IAAAA,KAAK,CAACuB,KAAN,CAAYA,KAAZ,EAAmB;AACfC,MAAAA,QAAQ,EAAE,cADK;AAEfC,MAAAA,UAAU,EAAEhB;AAFG,KAAnB;AAIH,GAND;;AAQA,sBACI,uDACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEQ,OAAO,CAACuB,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEvB,OAAO,CAACwB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B1B,QAAQ,GAAG,SAAH,GAAe,SAAjD,CAJJ,eAKI;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACyB,IAAzB;AAA+B,IAAA,QAAQ,EAAEpB,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,QAAQ,iBACJ,uDACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,cAAc,EAAEW,cAHpB;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,cAAc,EAAEA,cAHpB;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAHZ,eAoBI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,eAFV;AAGI,IAAA,cAAc,EAAEA,cAHpB;AAII,IAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,eA0BI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,cAAc,EAAEA,cAHpB;AAII,IAAA,IAAI,EAAEb,YAAY,GAAG,MAAH,GAAY,UAJlC;AAKI,IAAA,kBAAkB,EAAEO,kBALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EAkCQL,QAAQ,iBAAI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,iBAAjB;AAAmC,IAAA,KAAK,EAAC,iBAAzC;AAA2D,IAAA,cAAc,EAAEW,cAA3E;AAA2F,IAAA,IAAI,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCpB,CADJ,eAsCI,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAoE,IAAA,SAAS,EAAET,OAAO,CAAC0B,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgG5B,QAAQ,GAAG,SAAH,GAAe,SAAvH,CAtCJ,eAuCI,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAC,0EADb;AAEI,IAAA,MAAM,EAAG6B,WAAD,iBACJ,oBAAC,MAAD;AACI,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,YADvB;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,OAAO,EAAED,WAAW,CAACE,OAJzB;AAKI,MAAA,QAAQ,EAAEF,WAAW,CAACG,QAL1B;AAMI,MAAA,SAAS,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANf;AAOI,MAAA,OAAO,EAAC,WAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR;AAeI,IAAA,SAAS,EAAElB,aAff;AAgBI,IAAA,SAAS,EAAEQ,aAhBf;AAiBI,IAAA,YAAY,EAAE,oBAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,eA2DI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,QAAQ,GAAG,kCAAH,GAAwC,6BADrD,CADJ,CADJ,CA3DJ,CALJ,CADJ,CADJ,eA6EI,oBAAC,cAAD;AACI,IAAA,QAAQ,EAAC,cADb;AAEI,IAAA,SAAS,EAAE,IAFf;AAGI,IAAA,eAAe,EAAE,KAHrB;AAII,IAAA,WAAW,EAAE,KAJjB;AAKI,IAAA,YAAY,MALhB;AAMI,IAAA,GAAG,EAAE,KANT;AAOI,IAAA,gBAAgB,MAPpB;AAQI,IAAA,SAAS,MARb;AASI,IAAA,YAAY,MAThB;AAUI,IAAA,KAAK,EAAC,SAVV;AAWI,IAAA,UAAU,EAAEN,MAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7EJ,CADJ;AA6FH,CA9ID;;AAgJA,eAAeG,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//ui packages\r\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// pakages\r\nimport { ToastContainer, toast, cssTransition } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//style\r\nimport useStyles from './Styles';\r\n\r\n// components\r\nimport InputField from './InputField';\r\nimport Icon from './icon';\r\n\r\n\r\n\r\n// style css popup messages\r\nconst bounce = cssTransition({\r\n    enter: \"animate__animated animate__bounceIn\",\r\n    exit: \"animate__animated animate__bounceOut\"\r\n});\r\n\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    // show password and hiden password\r\n    const handlePasswordShow = () => setShowPassword((prvShowPassword) => !prvShowPassword);\r\n\r\n    const handleSubmit = () => {\r\n        toast.error('Sign In', {\r\n            position: \"bottom-right\",\r\n            transition: bounce\r\n        });\r\n    };\r\n\r\n    const handleOnChange = () => {\r\n\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsSignUp((prvIssignUp) => !prvIssignUp);\r\n        setShowPassword(false);\r\n    };\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n            dispatch({ type: \"AUTH\", data: { result, token } });\r\n            navigate(\"/\")\r\n        } catch (error) {\r\n            toast.error(error, {\r\n                position: \"bottom-right\",\r\n                transition: bounce\r\n            });\r\n        }\r\n    };\r\n\r\n    const googleFaliure = (error) => {\r\n        console.log(error);\r\n        toast.error(error, {\r\n            position: \"bottom-right\",\r\n            transition: bounce\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography variant='h5'>{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {\r\n                                isSignUp && (\r\n                                    <>\r\n                                        <InputField\r\n                                            name=\"firstName\"\r\n                                            label='firstName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                        <InputField\r\n                                            name=\"lastName\"\r\n                                            label='lastName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            <InputField\r\n                                name='email'\r\n                                label='Email Address'\r\n                                handleOnChange={handleOnChange}\r\n                                type=\"email\"\r\n                            />\r\n                            <InputField\r\n                                name='password'\r\n                                label='Password'\r\n                                handleOnChange={handleOnChange}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                handlePasswordShow={handlePasswordShow}\r\n                            />\r\n                            {\r\n                                isSignUp && <InputField name='confirmPassword' label=\"Repeat Password\" handleOnChange={handleOnChange} type='password' />\r\n                            }\r\n                        </Grid>\r\n                        <Button fullWidth type='submit' variant='contained' color='primary' className={classes.submit}>{isSignUp ? 'Sign Up' : 'sign In'}</Button>\r\n                        <GoogleLogin\r\n                            clientId=\"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\"\r\n                            render={(renderPrpos) => (\r\n                                <Button\r\n                                    className={classes.googleButton}\r\n                                    color='primary'\r\n                                    fullWidth\r\n                                    onClick={renderPrpos.onClick}\r\n                                    disabled={renderPrpos.disabled}\r\n                                    startIcon={<Icon />}\r\n                                    variant='contained'\r\n                                >\r\n                                    Google Sign In\r\n                                </Button>\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleFaliure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n\r\n                        <Grid container justify='flex-end'>\r\n                            <Grid item>\r\n                                <Button onClick={switchMode}>\r\n                                    {isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n                transition={bounce}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}