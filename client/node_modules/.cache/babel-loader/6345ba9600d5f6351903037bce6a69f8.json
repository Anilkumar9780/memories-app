{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect, useRef } from 'react'; //material ui package\n\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './Styles'; //packages\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // import FileUpload from 'react-material-file-upload';\n//components\n\nimport { createPost, updatePost } from '../../actions/Posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: ' ',\n    tags: '',\n    file: ''\n  });\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [tags, setTags] = useState('');\n  const [file, setFile] = useState(null);\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const inputRef = useRef(); // onmonut\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  /**\n   * Reset input box\n   */\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      file: ''\n    });\n    inputRef.current.value = \"\";\n  };\n  /**\n   * create user post \n   * @param {object} e \n   */\n\n\n  const handleSubmit = async e => {\n    var _user$result;\n\n    e.preventDefault();\n    const name = user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name;\n    const formData = new FormData();\n\n    for (const key of Object.keys(postData.file)) {\n      formData.append('file', postData.file[key]);\n    }\n\n    formData.append('title', postData.title);\n    formData.append('tags', postData.tags);\n    formData.append('message', postData.message);\n    formData.append('name', name);\n\n    if (currentId === 0) {\n      dispatch(createPost(formData, navigate));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, formData, {\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own memories and like other's memories...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    method: \"post\",\n    action: \"upload\",\n    enctype: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true // value={title}\n    // onChange={(e) => setTitle(e.target.value)}\n    ,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    spellCheck: true,\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4 // value={message}\n    // onChange={(e) => setMessage(e.target.value)}\n    ,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true // value={tags}\n    // onChange={(e) => setTags(e.target.value.split(','))}\n    ,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    ref: inputRef // onChange={(e) => setFile(e.target.files)}\n    ,\n    onChange: e => setPostData({ ...postData,\n      file: e.target.files\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"large\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Button","Typography","Paper","useStyles","useDispatch","useSelector","useNavigate","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","file","setTitle","setMessage","setTags","setFile","post","state","posts","find","_id","dispatch","classes","navigate","user","JSON","parse","localStorage","getItem","inputRef","clear","current","value","handleSubmit","e","preventDefault","name","result","formData","FormData","key","Object","keys","append","paper","root","form","target","split","fileInput","files","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n//material ui package\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './Styles';\n\n//packages\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import FileUpload from 'react-material-file-upload';\n\n//components\nimport { createPost, updatePost } from '../../actions/Posts';\n\nconst Form = ({\n  currentId, setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    title: '',\n    message: ' ',\n    tags: '',\n    file: ''\n  })\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [tags, setTags] = useState('');\n  const [file, setFile] = useState(null);\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const inputRef = useRef();\n\n  // onmonut\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  /**\n   * Reset input box\n   */\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: '', file: '' });\n    inputRef.current.value = \"\";\n  };\n\n  /**\n   * create user post \n   * @param {object} e \n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const name = user?.result?.name;\n    const formData = new FormData();\n    for (const key of Object.keys(postData.file)) {\n      formData.append('file', postData.file[key])\n    }\n    formData.append('title', postData.title);\n    formData.append('tags', postData.tags);\n    formData.append('message', postData.message);\n    formData.append('name', name);\n    if (currentId === 0) {\n      dispatch(createPost(formData, navigate));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, formData, { name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant='h6' align='center'>\n          Please Sign In to create your own memories and like other's memories...\n        </Typography>\n      </Paper>\n    )\n  }\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n        method='post'\n        action='upload'\n        enctype=\"multipart/form-data\"\n      >\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          // value={title}\n          // onChange={(e) => setTitle(e.target.value)}\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          spellCheck={true}\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          minRows={4}\n          // value={message}\n          // onChange={(e) => setMessage(e.target.value)}\n          value={postData.message}\n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          // value={tags}\n          // onChange={(e) => setTags(e.target.value.split(','))}\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n        <div className={classes.fileInput}>\n          <input\n            name=\"file\"\n            type=\"file\"\n            ref={inputRef}\n            // onChange={(e) => setFile(e.target.files)}\n            onChange={(e) => setPostData({ ...postData, file: e.target.files })}\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          onClick={clear}\n          fullWidth\n        >Reset\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}