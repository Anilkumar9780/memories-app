{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\PostsDetail\\\\CommentSection.js\";\nimport React, { useState, useRef } from 'react'; //ui packages\n\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux'; //style\n\nimport useStyles from './Styles'; //component\n\nimport { commentPost } from '../../actions/Posts';\n\nconst CommentSection = ({\n  post\n}) => {\n  var _user$result;\n\n  const classes = useStyles();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState('');\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const commentsRef = useRef();\n  const dispatch = useDispatch();\n  /**\r\n   *  handle user comment by user at post \r\n   */\n\n  const handleComment = async () => {\n    const finalComment = `${user.result.name}: ${comment}`;\n    const newComments = await dispatch(commentPost(finalComment, post._id));\n    setComments(newComments);\n    setComment('');\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Comments\"), comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \" \", c.split(': ')[0]), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Write a Comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    minRows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: event => setComment(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment,\n    variant: \"contained\",\n    onClick: handleComment,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/PostsDetail/CommentSection.js"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","commentsRef","dispatch","handleComment","finalComment","result","name","newComments","_id","current","scrollIntoView","behavior","commentOuterContainer","commentsInnerContainer","map","c","i","split","width","event","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\n//ui packages\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//style\r\nimport useStyles from './Styles';\r\n\r\n//component\r\nimport { commentPost } from '../../actions/Posts';\r\n\r\nconst CommentSection = ({ post }) => {\r\n    const classes = useStyles();\r\n    const [comments, setComments] = useState(post?.comments);\r\n    const [comment, setComment] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n    const commentsRef = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     *  handle user comment by user at post \r\n     */\r\n    const handleComment = async () => {\r\n        const finalComment = `${user.result.name}: ${comment}`\r\n        const newComments = await dispatch(commentPost(finalComment, post._id));\r\n        setComments(newComments);\r\n        setComment('');\r\n        commentsRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.commentOuterContainer}>\r\n                <div className={classes.commentsInnerContainer}>\r\n                    {/* mapping user comment */}\r\n                    <Typography gutterBottom variant='h6'>Comments</Typography>\r\n                    {comments.map((c, i) => (\r\n                        <Typography key={i} gutterBottom variant='subtitle1'>\r\n                            <strong > {c.split(': ')[0]}</strong>\r\n                            {c.split(':')[1]}\r\n                        </Typography>\r\n                    ))}\r\n                    <div ref={commentsRef} />\r\n                </div>\r\n                {/* comment input */}\r\n                {user?.result?.name && (\r\n                    <div style={{ width: '70%' }}>\r\n                        <Typography gutterBottom variant='h6' >Write a Comment</Typography>\r\n                        <TextField\r\n                            fullWidth\r\n                            minRows={4}\r\n                            variant='outlined'\r\n                            label='Comment'\r\n                            multiline\r\n                            value={comment}\r\n                            onChange={(event) => setComment(event.target.value)}\r\n                        />\r\n                        {/* submit  */}\r\n                        <Button\r\n                            style={{ marginTop: '10px' }}\r\n                            fullWidth\r\n                            disabled={!comment}\r\n                            variant='contained'\r\n                            onClick={handleComment}\r\n                            color='primary'\r\n                        >\r\n                            Comment\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;\r\n"]},"metadata":{},"sourceType":"module"}