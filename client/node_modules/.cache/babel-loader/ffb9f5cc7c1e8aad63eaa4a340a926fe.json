{"ast":null,"code":"// action type component\nimport { AUTH, RESET_PASSWORD } from '../constants/actionTypes'; // packages\n\nimport { toast } from 'react-toastify'; // api \n\nimport * as api from '../api/Index.js';\n/**\r\n *  user signin \r\n * @param {object} formData \r\n * @param {} navigate  \r\n */\n\nexport const signin = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    console.log(data);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    navigate('/');\n    toast.success(\"tostFrom:React\", {\n      position: \"bottom-right\",\n      type: \"success\" // data: \n\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n/**\r\n * user signup \r\n * @param {object} formData \r\n * @param {*} navigate \r\n */\n\nexport const signup = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    navigate('/');\n    toast.success(\"Sign Up successfuly\", {\n      position: \"bottom-right\"\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const resetPassword = email => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.resetPasswordApi(email);\n    dispatch({\n      type: RESET_PASSWORD,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const newPasswordGen = (password, token) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.newPasswordApi(password, token);\n    dispatch({\n      type: \"NEW_PASSWORD\",\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/actions/Auth.js"],"names":["AUTH","RESET_PASSWORD","toast","api","signin","formData","navigate","dispatch","data","signIn","console","log","type","success","position","error","signup","signUp","resetPassword","email","resetPasswordApi","payload","newPasswordGen","password","token","newPasswordApi"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,cAAf,QAAqC,0BAArC,C,CAEA;;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA;;;;;;AAKA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,MAAJ,CAAWJ,QAAX,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,IAAR;AAAcQ,MAAAA;AAAd,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACAJ,IAAAA,KAAK,CAACW,OAAN,CAAc,gBAAd,EAAgC;AAC5BC,MAAAA,QAAQ,EAAE,cADkB;AAE5BF,MAAAA,IAAI,EAAE,SAFsB,CAG5B;;AAH4B,KAAhC;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ,CAdM;AAgBP;;;;;;AAKA,OAAO,MAAMC,MAAM,GAAG,CAACX,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACc,MAAJ,CAAWZ,QAAX,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,IAAR;AAAcQ,MAAAA;AAAd,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACAJ,IAAAA,KAAK,CAACW,OAAN,CAAc,qBAAd,EAAqC;AACjCC,MAAAA,QAAQ,EAAE;AADuB,KAArC;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW,MAAOZ,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACiB,gBAAJ,CAAqBD,KAArB,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,cAAR;AAAwBoB,MAAAA,OAAO,EAAEb;AAAjC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOO,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ,CAPM;AAUP,OAAO,MAAMO,cAAc,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB,MAAOjB,QAAP,IAAoB;AACnE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACsB,cAAJ,CAAmBF,QAAnB,EAA6BC,KAA7B,CAAvB;AACAjB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,cAAR;AAAwBJ,MAAAA;AAAxB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOO,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ,CAPM","sourcesContent":["// action type component\r\nimport { AUTH, RESET_PASSWORD } from '../constants/actionTypes';\r\n\r\n// packages\r\nimport { toast } from 'react-toastify';\r\n\r\n// api \r\nimport * as api from '../api/Index.js';\r\n\r\n/**\r\n *  user signin \r\n * @param {object} formData \r\n * @param {} navigate  \r\n */\r\nexport const signin = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signIn(formData);\r\n        console.log(data)\r\n        dispatch({ type: AUTH, data })\r\n        navigate('/');\r\n        toast.success(\"tostFrom:React\", {\r\n            position: \"bottom-right\",\r\n            type: \"success\",\r\n            // data: \r\n          });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n/**\r\n * user signup \r\n * @param {object} formData \r\n * @param {*} navigate \r\n */\r\nexport const signup = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signUp(formData);\r\n        dispatch({ type: AUTH, data });\r\n        navigate('/');\r\n        toast.success(\"Sign Up successfuly\", {\r\n            position: \"bottom-right\",\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.resetPasswordApi(email);\r\n        dispatch({ type: RESET_PASSWORD, payload: data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\nexport const newPasswordGen = (password, token) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.newPasswordApi(password, token);\r\n        dispatch({ type: \"NEW_PASSWORD\", data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}