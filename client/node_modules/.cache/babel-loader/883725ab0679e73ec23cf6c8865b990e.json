{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect, useRef } from 'react'; //material ui package\n\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './Styles'; //packages\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useNavigate } from 'react-router-dom'; //components\n\nimport { createPost, updatePost } from '../../actions/Posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result2;\n\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [tags, setTags] = useState('');\n  const [file, setFile] = useState(null);\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const inputRef = useRef(); // onmonut\n\n  useEffect(() => {// if (post) setPostData(post);\n  }, [post]);\n  /**\n   * Reset input box\n   */\n\n  const clear = () => {\n    setCurrentId(0);\n    setMessage('');\n    setTags('');\n    setTitle('');\n    inputRef.current.value = \"\";\n  };\n  /**\n   * create user post \n   * @param {object} e \n   */\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userMEessage = {\n      title,\n      tags,\n      message\n    };\n    console.log(userMEessage);\n    let formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('tags', tags);\n    formData.append('message', message);\n\n    if (currentId === 0) {\n      dispatch(createPost(formData));\n      clear();\n    } else {\n      var _user$result;\n\n      dispatch(updatePost(currentId, formData, {\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own memories and like other's memories...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    spellCheck: true,\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: tags,\n    onChange: e => setTags(e.target.value.split(',')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    ref: inputRef,\n    onChange: e => setFile(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"large\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Button","Typography","Paper","useStyles","useDispatch","useSelector","FileBase","useNavigate","createPost","updatePost","Form","currentId","setCurrentId","title","setTitle","message","setMessage","tags","setTags","file","setFile","post","state","posts","find","_id","dispatch","classes","navigate","user","JSON","parse","localStorage","getItem","inputRef","clear","current","value","handleSubmit","e","preventDefault","userMEessage","console","log","formData","FormData","append","name","result","paper","root","form","target","split","fileInput","files","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n//material ui package\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './Styles';\n\n//packages\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useNavigate } from 'react-router-dom';\n\n//components\nimport { createPost, updatePost } from '../../actions/Posts';\n\nconst Form = ({\n  currentId, setCurrentId\n}) => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [tags, setTags] = useState('');\n  const [file, setFile] = useState(null);\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const inputRef = useRef();\n\n  // onmonut\n  useEffect(() => {\n    // if (post) setPostData(post);\n  }, [post]);\n\n  /**\n   * Reset input box\n   */\n  const clear = () => {\n    setCurrentId(0);\n    setMessage('');\n    setTags('');\n    setTitle('');\n    inputRef.current.value = \"\";\n  };\n\n\n  /**\n   * create user post \n   * @param {object} e \n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const userMEessage = { title, tags, message }; \n    console.log(userMEessage)\n    let formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('tags', tags);\n    formData.append('message', message);\n    if (currentId === 0) {\n      dispatch(createPost(formData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, formData, { name: user?.result?.name }));\n      clear();\n    }\n\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant='h6' align='center'>\n          Please Sign In to create your own memories and like other's memories...\n        </Typography>\n      </Paper>\n    )\n  }\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}  >\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <TextField\n          spellCheck={true}\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          rows={4}\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          value={tags}\n          onChange={(e) => setTags(e.target.value.split(','))}\n        />\n        <div className={classes.fileInput}>\n          {/* <FileBase\n            type=\"file\"\n            onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n          /> */}\n          <input\n            name=\"file\"\n            type=\"file\"\n            ref={inputRef}\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          onClick={clear}\n          fullWidth\n        >Reset\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}