{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\social_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react'; //ui packages\n\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; // pakages\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GoogleLogin from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; //style\n\nimport useStyles from './Styles'; // components\n\nimport InputField from './InputField';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/Auth';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  comfirmPassword: ''\n};\n\nconst Auth = () => {\n  const [formData, setFormData] = useState(initialState);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // show password and hiden password\n\n  const handlePasswordShow = () => setShowPassword(prvShowPassword => !prvShowPassword);\n  /**\r\n   * sign In and sign up user dispatch\r\n   * @param {object} event \r\n   */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signup(formData, navigate));\n    } else {\n      dispatch(signin(formData, navigate));\n    }\n\n    ;\n  };\n  /**\r\n   * handle onchange input value in formData\r\n   * @param {object} event \r\n   */\n\n\n  const handleOnChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  /**\r\n   * switch Mode onclick button move to sign in or sign up page\r\n   */\n\n\n  const switchMode = () => {\n    setIsSignUp(prvIssignUp => !prvIssignUp);\n    setShowPassword(false);\n  };\n  /**\r\n   * google auth res data success \r\n   * @param {object} res \r\n   */\n\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n      navigate(\"/\");\n      toast.success(\"Sign In successfuly \", {\n        position: \"bottom-right\"\n      });\n    } catch ({\n      // Destructuring\n      data: {\n        error: {\n          message = \"\"\n        }\n      }\n    }) {\n      toast.error(message, {\n        type: \"error\",\n        data: message,\n        position: \"bottom-right\"\n      });\n    }\n  };\n  /**\r\n   * google faliure auth\r\n   * @param {object} error \r\n   */\n\n\n  const googleFaliure = error => {\n    console.log(error);\n    toast.error(error, {\n      position: \"bottom-right\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, isSignUp ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, isSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputField, {\n    name: \"firstName\",\n    label: \"FirstName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"lastName\",\n    label: \"LastName\",\n    handleOnChange: handleOnChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleOnChange: handleOnChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    handleOnChange: handleOnChange,\n    type: showPassword ? 'text' : 'password',\n    handlePasswordShow: handlePasswordShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }), isSignUp && /*#__PURE__*/React.createElement(InputField, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleOnChange: handleOnChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, isSignUp ? 'Sign Up' : 'sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\",\n    render: renderPrpos => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderPrpos.onClick,\n      disabled: renderPrpos.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 48\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFaliure,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\")))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    draggable: true,\n    pauseOnHover: true,\n    theme: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Administrator/social_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Container","Avatar","Paper","Grid","Typography","Button","LockOutlinedIcon","ToastContainer","toast","GoogleLogin","gapi","useDispatch","useNavigate","useStyles","InputField","Icon","signin","signup","initialState","firstName","lastName","email","password","comfirmPassword","Auth","formData","setFormData","showPassword","setShowPassword","isSignUp","setIsSignUp","classes","dispatch","navigate","handlePasswordShow","prvShowPassword","handleSubmit","event","preventDefault","handleOnChange","target","name","value","switchMode","prvIssignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","success","position","error","message","googleFaliure","console","log","paper","avatar","form","submit","renderPrpos","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//ui packages\r\nimport { Container, Avatar, Paper, Grid, Typography, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// pakages\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//style\r\nimport useStyles from './Styles';\r\n\r\n// components\r\nimport InputField from './InputField';\r\nimport Icon from './icon';\r\nimport { signin, signup } from '../../actions/Auth';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', comfirmPassword: '' }\r\n\r\nconst Auth = () => {\r\n    const [formData, setFormData] = useState(initialState);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    // show password and hiden password\r\n    const handlePasswordShow = () => setShowPassword((prvShowPassword) => !prvShowPassword);\r\n\r\n    /**\r\n     * sign In and sign up user dispatch\r\n     * @param {object} event \r\n     */\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isSignUp) {\r\n            dispatch(signup(formData, navigate));\r\n        } else {\r\n            dispatch(signin(formData, navigate));\r\n        };\r\n    };\r\n\r\n    /**\r\n     * handle onchange input value in formData\r\n     * @param {object} event \r\n     */\r\n    const handleOnChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    /**\r\n     * switch Mode onclick button move to sign in or sign up page\r\n     */\r\n    const switchMode = () => {\r\n        setIsSignUp((prvIssignUp) => !prvIssignUp);\r\n        setShowPassword(false);\r\n    };\r\n\r\n    /**\r\n     * google auth res data success \r\n     * @param {object} res \r\n     */\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        try {\r\n            dispatch({ type: \"AUTH\", data: { result, token } });\r\n            navigate(\"/\")\r\n            toast.success(\"Sign In successfuly \", {\r\n                position: \"bottom-right\",\r\n            });\r\n        } catch ({\r\n            // Destructuring\r\n            data: {\r\n                error: { message = \"\" },\r\n            },\r\n        }) {\r\n            toast.error(message, {\r\n                type: \"error\",\r\n                data: message,\r\n                position: \"bottom-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * google faliure auth\r\n     * @param {object} error \r\n     */\r\n    const googleFaliure = (error) => {\r\n        console.log(error);\r\n        toast.error(error, {\r\n            position: \"bottom-right\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography variant='h5'>{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {\r\n                                isSignUp && (\r\n                                    <>\r\n                                        <InputField\r\n                                            name=\"firstName\"\r\n                                            label='FirstName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                        <InputField\r\n                                            name=\"lastName\"\r\n                                            label='LastName'\r\n                                            handleOnChange={handleOnChange}\r\n                                            autoFocus\r\n                                            half\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            <InputField\r\n                                name='email'\r\n                                label='Email Address'\r\n                                handleOnChange={handleOnChange}\r\n                                type=\"email\"\r\n                            />\r\n                            <InputField\r\n                                name='password'\r\n                                label='Password'\r\n                                handleOnChange={handleOnChange}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                handlePasswordShow={handlePasswordShow}\r\n                            />\r\n                            {\r\n                                isSignUp && <InputField name='confirmPassword' label=\"Repeat Password\" handleOnChange={handleOnChange} type='password' />\r\n                            }\r\n                        </Grid>\r\n                        <Button fullWidth type='submit' variant='contained' color='primary' className={classes.submit}>{isSignUp ? 'Sign Up' : 'sign In'}</Button>\r\n                        {/* Google sign in Button */}\r\n                        <GoogleLogin\r\n                            clientId=\"968502154569-8s1u0kkg5064onsq180f5s5bqln3htsp.apps.googleusercontent.com\"\r\n                            render={(renderPrpos) => (\r\n                                <Button\r\n                                    className={classes.googleButton}\r\n                                    color='primary'\r\n                                    fullWidth\r\n                                    onClick={renderPrpos.onClick}\r\n                                    disabled={renderPrpos.disabled}\r\n                                    startIcon={<Icon />}\r\n                                    variant='contained'\r\n                                >\r\n                                    Google Sign In\r\n                                </Button>\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleFaliure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n\r\n                        <Grid container justify='flex-end'>\r\n                            <Grid item>\r\n                                {/* switch mode button have an account then sign in page then not have a/c move to sign up page  */}\r\n                                <Button onClick={switchMode}>\r\n                                    {isSignUp ? \"Already have an account? Sign In\" : \"Don't have account? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n            {/* popup message  */}\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}